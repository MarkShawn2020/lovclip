name: Build/release

on:
  push:
    branches: [ main ]
    paths-ignore:
      - "**.md"
      - "**.spec.js"
      - ".idea"
      - ".vscode"
      - ".dockerignore"
      - "Dockerfile"
      - ".gitignore"
      - ".github/**"
      - "!.github/workflows/build.yml"
  pull_request:
    branches: [ main ]
  release:
    types: [published]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    
    strategy:
      matrix:
        os: [macos-latest, windows-latest, ubuntu-latest]
        node-version: [20.x]
        
    steps:
    - name: Check out Git repository
      uses: actions/checkout@v4
      
    - name: Install Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        
    - name: Install pnpm
      uses: pnpm/action-setup@v3
      with:
        version: 9
        
    - name: Get pnpm store directory
      shell: bash
      run: echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV
      
    - name: Setup pnpm cache
      uses: actions/cache@v3
      with:
        path: ${{ env.STORE_PATH }}
        key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
        restore-keys: |
          ${{ runner.os }}-pnpm-store-
        
    - name: Install dependencies
      run: pnpm install --frozen-lockfile
      
    - name: Install native dependencies
      run: pnpm run install:native
      
    - name: Run TypeScript check
      run: pnpm exec tsc -noEmit
      
    - name: Run tests
      run: |
        if [ -d "test" ] && [ "$(find test -name '*.spec.*' -o -name '*.test.*' | wc -l)" -gt 0 ]; then
          pnpm run pretest && pnpm test
        else
          echo "No test files found, skipping tests"
        fi
      
    - name: Setup Python for native modules
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Build native modules
      run: pnpm run build:native
      
    - name: Install app dependencies for Electron
      run: pnpm exec electron-builder install-app-deps
      timeout-minutes: 10
        
    - name: Install system dependencies (Ubuntu)
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get update
        sudo apt-get install -y libx11-dev libxkbfile-dev libsecret-1-dev libnss3-dev
        
    - name: Install system dependencies (macOS)
      if: matrix.os == 'macos-latest'
      run: |
        # Install any macOS specific dependencies if needed
        echo "macOS dependencies installed"
      
    - name: Build Electron app
      run: pnpm run dist:ci
      timeout-minutes: 20
      env:
        # GitHub token for releases
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        # Memory optimization for electron-builder
        NODE_OPTIONS: "--max-old-space-size=6144"
        # Disable code signing for CI builds
        CSC_IDENTITY_AUTO_DISCOVERY: false
        # Reduce concurrency to prevent resource exhaustion
        ELECTRON_BUILDER_COMPRESSION_LEVEL: 0
        ELECTRON_BUILDER_CACHE: false
        
    - name: List build artifacts
      run: |
        echo "Build artifacts:"
        find release/ -type f -name "*.dmg" -o -name "*.zip" -o -name "*.exe" -o -name "*.deb" -o -name "*.AppImage" -o -name "*.yml" | head -20
        echo "Total size:"
        du -sh release/ 2>/dev/null || echo "No release directory"
        
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.os }}-build
        path: |
          release/**/*.dmg
          release/**/*.zip
          release/**/*.exe
          release/**/*.deb
          release/**/*.AppImage
          release/**/*.yml
        retention-days: 7
        compression-level: 6
      continue-on-error: true